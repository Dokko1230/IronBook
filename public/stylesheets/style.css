body {
  font: 14px "Lucida Grande", Helvetica, Arial, sans-serif;
}

.login:before, .signup:before {
  background: url(../images/splash.jpg) no-repeat;
  /*background-size: cover;*/
  content: "";
  position: absolute;
  height: 20%; width: 20%;
  /*background: url(http://lorempixel.com/420/255);*/
  background-size: cover;
  z-index: -1; /* Keep the background behind the content */
  
  /* don't forget to use the prefixes you need */
  -webkit-transform: scale(5);
  -webkit-transform-origin: top left;
  -webkit-filter: blur(1px);
  filter: gray; /* IE6-9 */
  -webkit-filter: grayscale(100%);
}

header {
  font-family: 'Yellowtail', cursive;
  background-color: black;
  color: white;
  text-align: center;
  padding: 5px 0;
}

header h2 {
  margin: 0;
}

.login-container, .signup-container {
  left: 0;
  right: 0;
  position: fixed;
  width: 50%;
  height: 30%;
  margin: auto;
  top: 0;
  bottom: 0;
  color: white;
}
.login-container > p, .signup-container > p{
  margin-top: 10px;
}

.login-container a, .signup-container a {
  color: white;
}
.login-container a:hover , .signup-container a:hover {
  color: white;
}
a {
  color: #00B7FF;
}

.lifts {
  margin-top: 10px;
}
.lift {
  padding: 10px;
  color: white;
}
.lift span {
  margin: 0 20px;
  vertical-align: middle;
}
.lift i:active {
  position: relative;
  top: 1px;
}
.lift i {
  vertical-align: middle;
}

.lift .row * {
  text-align: center;
}

.lift button {
}

.liftName {

}

.container {
  overflow: hidden;
}
.nav-container {
  background-color: black;
  position: fixed;
  bottom: 0;
  width: 100%;
}
.nav-pills > li {
  margin-left: 0 !important;
  width: 25%;
}
.nav-container a {
  color: white;
}
.nav-container a:hover {
  color: white;
  text-decoration: none;
  background-color: initial !important;
}
.nav {
  margin: auto;
  padding-left: initial !important;
}
.nav > li > a {
  padding: 10px 5px !important;
  text-align:center;
}
.nav-item {
  display: block;
  font-size: 10px;
}

/** Stopwatch **/
* {margin: 0; padding: 0;}

body{
  background: url('/images/wood_pattern.png') repeat;
}

.stopwatch-container {
  padding-top:100px;
  text-align: center;
}

.timer {
  padding: 10px;
  background: linear-gradient(top, #222, #444);
  overflow: hidden;
  display: inline-block;
  border: 7px solid #efefef;
  border-radius: 5px;
  position: relative;
  
  box-shadow: 
    inset 0 -2px 10px 1px rgba(0, 0, 0, 0.75), 
    0 5px 20px -10px rgba(0, 0, 0, 1);
}

.cell {
  /*Should only display 1 digit. Hence height = line height of .numbers
  and width = width of .numbers*/
  width: 0.60em;
  height: 40px;
  font-size: 34px;
  overflow: hidden;
  position: relative;
  float: left;
}

.numbers {
  width: 0.6em;
  line-height: 40px;
  font-family: digital, arial, verdana;
  text-align: center;
  color: #fff;
  
  position: absolute;
  top: 0;
  left: 0;
  
  /*Glow to the text*/
  text-shadow: 0 0 5px rgba(255, 255, 255, 1);
}

/*Styles for the controls*/
#timer_controls {
  margin-top: -5px;
}
#timer_controls label {
  cursor: pointer;
  padding: 5px 10px;
  background: #efefef;
  font-family: arial, verdana, tahoma;
  font-size: 11px;
  border-radius: 0 0 3px 3px;
}
input[name="controls"] {display: none;}

/*Control code*/
#stop:checked~.timer .numbers {animation-play-state: paused;}
#start:checked~.timer .numbers {animation-play-state: running;}
#reset:checked~.timer .numbers {animation: none;}

.moveten {
  /*The digits move but dont look good. We will use steps now
  10 digits = 10 steps. You can now see the digits swapping instead of 
  moving pixel-by-pixel*/
  animation: moveten 1s steps(10, end) infinite;
  /*By default animation should be paused*/
  animation-play-state: paused;
}
.movesix {
  animation: movesix 1s steps(6, end) infinite;
  animation-play-state: paused;
}

/*Now we need to sync the animation speed with time speed*/
/*One second per digit. 10 digits. Hence 10s*/
.second {animation-duration: 10s;}
.tensecond {animation-duration: 60s;} /*60 times .second*/

.milisecond {animation-duration: 1s;} /*1/10th of .second*/
.tenmilisecond {animation-duration: 0.1s;}
.hundredmilisecond {animation-duration: 0.01s;}

.minute {animation-duration: 600s;} /*60 times .second*/
.tenminute {animation-duration: 3600s;} /*60 times .minute*/

.hour {animation-duration: 36000s;} /*60 times .minute*/
.tenhour {animation-duration: 360000s;} /*10 times .hour*/

/*The stopwatch looks good now. Lets add some styles*/

/*Lets animate the digit now - the main part of this tutorial*/
/*We are using prefixfree, so no need of vendor prefixes*/
/*The logic of the animation is to alter the 'top' value of the absolutely
positioned .numbers*/
/*Minutes and Seconds should be limited to only '60' and not '100'
Hence we need to create 2 animations. One with 10 steps and 10 digits and
the other one with 6 steps and 6 digits*/
@keyframes moveten {
  0% {top: 0;}
  100% {top: -400px;} 
  /*height = 40. digits = 10. hence -400 to move it completely to the top*/
}

@keyframes movesix {
  0% {top: 0;}
  100% {top: -240px;} 
  /*height = 40. digits = 6. hence -240 to move it completely to the top*/
}

/*Lets use a better font for the numbers*/
@font-face {
  font-family: 'digital';
  src: url('/fonts/DS-DIGI.TTF');
}

/** Calendar **/
.clndr {
  background-color: white;
  border-radius: 10px;
  padding: 10px;
}
.clndr .today {
  background-color: #EDB61C !important;
}
.clndr .clndr-table {
  width: 100%;
}
.clndr td {
  text-align: center;
  border: 1px solid #999;
}
.clndr .event {
  background-color: #73A722;
}
.clndr .clndr-controls > div {
  float: left;
  width: 33%;
  text-align:center;
  margin-bottom: 10px;
}

/** StatView **/
.stat {
  background-color: white;
  border-radius: 10px;
  margin-top: 10px;
}
.stat h5 {
  margin-left: 10px;
  padding-top: 10px;
}